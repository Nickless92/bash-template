# SPDX-FileCopyrightText: 2022 Herbert Thielen <thielen@hs-worms.de>
#
# SPDX-License-Identifier: CC0-1.0

stages:
  - test

# See https://reuse.software/dev/#gitlab
reuse:
  stage: test	# or precommit rule?
  # For dependency proxy documentation, see
  # https://gitlab.ai.it.hs-worms.de/help/user/packages/dependency_proxy/index.md#use-the-dependency-proxy-for-docker-images
  # Note that the dependency proxy is available at group level only, not for projects (forks)
  # outside of groups, i.e. for a personal fork, you have to remove the dependency proxy prefix.
  image: reuse:latest
  steps:
    - run: reuse --version
    - run: reuse lint



image: node:latest
cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .npm/
before_script:
  - npm ci --cache .npm --prefer-offline
test_async:
  script:
    - node ./specs/start.js ./specs/async.spec.js
    
jobs:
  test_async:
    runs-on: ubuntu-latest
    steps:
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: v1-npm-deps-${{ hashFiles('**/package-lock.json') }}
        restore-keys: v1-npm-deps-



basics:
  stage: test
  # For dependency proxy documentation, see
  # https://gitlab.ai.it.hs-worms.de/help/user/packages/dependency_proxy/index.md#use-the-dependency-proxy-for-docker-images
  # Note that the dependency proxy is available at group level only, not for projects (forks)
  # outside of groups, i.e. for a personal fork, you have to remove the dependency proxy prefix.
  image: alpine:latest
  before_script:
    - apk update && apk add bash
  steps:
    - run: echo "available shells in this image:"
    - run: ls -l /bin/*sh* /usr/bin/*sh*
    - run: ./template.sh -V
    - run: ./template.sh -h
